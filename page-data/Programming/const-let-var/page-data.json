{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/Programming/const-let-var/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Zeyu's Blog"}},"markdownRemark":{"id":"de14ad24-0a5d-50e2-857a-a215b51b0746","excerpt":"Const 定义时必须初始化 不能 reassign value 块作用域限制 Let 定义时不必初始化 可以 reassign value 块作用域限制 Var 定义时不必初始化 可以 reassign value 块作用域限制 （仅限 fucntion） 在定义之前调用？","html":"<h2>Const</h2>\n<h3>定义时必须初始化</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const hero = 'Batman';</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const hero; // SyntaxError: Missing initializer in const declaration</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const hero = 'Batman';\nconsole.log(hero);              // logs 'Batman'\nconsole.log(`Hello, ${hero}!`); // logs 'Hello, Batman!'</code></pre></div>\n<h3>不能 reassign value</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const hero = 'Batman';\n\nhero = 'Joker'; // TypeError: Assignment to constant variable</code></pre></div>\n<h3>块作用域限制</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">if (true) {\n  // Code block scope\n  const hero = 'Batman';\n  console.log(hero); // logs 'Batman'\n}\nconsole.log(hero); // throws ReferenceError</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function greetBatman() {\n  // Function scope\n  const hero = 'Batman';\n  console.log(`Hello, ${hero}!`); // logs 'Hello, Batman!'\n}\nconsole.log(`Hello, ${hero}!`); // throws ReferenceError\n\ngreetBatman();</code></pre></div>\n<h2>Let</h2>\n<h3>定义时不必初始化</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let myVariable1 = initialValue;\n// or\nlet myVariable2;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let villain = 'Joker';\n\nlet name;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let villain = 'Joker';\n\nconsole.log(villain);              // logs 'Joker'\nconsole.log(`Hello, ${villain}!`); // logs 'Hello, Joker!'\n\nlet name;\nconsole.log(name); // logs undefined</code></pre></div>\n<h3>可以 reassign value</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">let villain = 'Joker';\n\nvillain = 'Bane';\nconsole.log(villain); // logs 'Bane'</code></pre></div>\n<h3>块作用域限制</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">if (true) {\n  // Code block scope\n  let villain = 'Joker';\n  console.log(villain); // logs 'Joker'\n}\nconsole.log(villain); // throws ReferenceError</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function greetJoker() {\n  // Function scope\n  let villain = 'Joker';\n  console.log(`Hello, ${villain}!`); // logs 'Hello, Joker!'\n}\nconsole.log(`Hello, ${villain}!`); // throws ReferenceError\n\ngreetJoker();</code></pre></div>\n<h2>Var</h2>\n<h3>定义时不必初始化</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var myVariable1 = initialValue;\n// or\nvar myVariable2;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var city = 'Gotham';\n\nvar name;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var city = 'Gotham';\n\nconsole.log(city);                  // logs 'Gotham'\nconsole.log(`Welcome to ${city}!`); // logs 'Welcome to Gotham!'\n\nvar name;\nconsole.log(name); // logs undefined</code></pre></div>\n<h3>可以 reassign value</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var city = 'Gotham';\n\ncity = 'New York';\nconsole.log(city); // logs 'New York'</code></pre></div>\n<h3>块作用域限制 （仅限 fucntion）</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function welcomeTo() {\n  // Function scope\n  var city = 'Gotham';\n  console.log(`Welcome to ${city}!`); // logs 'Welcome to Gotham!'\n}\nconsole.log(`Welcome to ${city}!`); // throws ReferenceError\n\nwelcomeTo();</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">if (true) {\n  // Code block scope\n  var city = 'Gotham';\n  console.log(city); // logs 'Gotham'\n}\nconsole.log(city); // logs 'Gotham'</code></pre></div>\n<h2>在定义之前调用？</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">console.log(hero); // throws ReferenceError\nconst hero = 'Batman';</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">console.log(villain); // throws ReferenceError\nlet villain = 'Joker';</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">console.log(city); // logs undefined\nvar city = 'Gotham';</code></pre></div>","frontmatter":{"title":"Const vs Let vs Var","date":"July 09, 2021","description":" JS 三种定义变量的方式"}},"previous":{"fields":{"slug":"/Programming/react-hooks-useContext-useReducer/"},"frontmatter":{"title":"React Hooks: useContext + useReducer"}},"next":{"fields":{"slug":"/Programming/react-hooks-useRef/"},"frontmatter":{"title":"React Hooks: useRef"}}},"pageContext":{"id":"de14ad24-0a5d-50e2-857a-a215b51b0746","previousPostId":"d83689c2-71c7-5367-a42a-3fbf28c4d4e8","nextPostId":"94e3ea4e-38f6-5ee7-a56d-f5404c62fe0c"}},
    "staticQueryHashes": ["2841359383","3257411868"]}